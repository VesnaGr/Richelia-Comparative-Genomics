"BGEO_SAMN07136523_METAG_IKJKMCAK" = "BGEO_MAG"
)
# Replace the Sample names using the mapping
data <- data %>%
mutate(Sample = recode(Sample, !!!name_mapping))
# Load necessary libraries
library(ggplot2)
library(ggridges)
library(dplyr)
# Read the combined TSV file
data <- read.csv("combined_gc_content.tsv", sep = "\t")
# Create a named vector with the mapping of old names to new names
name_mapping <- c(
"GCA_030065255.1_ASM3006525v1_genomic" = "MO_167.B42",
"GCA_002470035.1_ASM247003v1_genomic" = "UBA7409",
"GCA_002377925.1_ASM237792v1_genomic" = "UBA3481",
"GCA_013214565.1_ASM1321456v1_genomic" = "MAG_DT_104",
"TARA_MED_95_MAG_00146" = "TARA_MED",
"GCA_030066045.1_ASM3006604v1_genomic" = "MO_167.B12",
"GCA_000613065.1_RintRC_1_genomic" = "RintRC01",
"GCF_000350105.1_ASM35010v1_genomic" = "ReuHH01",
"GCF_000350125.1_ASM35012v1_genomic" = "ReuHM01",
"GCA_030065055.1_ASM3006505v1_genomic" = "MO_192.B10",
"GCA_900299445.1_Richelia_intracellularis_AM_2804_genomic" = "AM_2804",
"TARA_PON_109_MAG_00086" = "TARA_PON",
"GCF_900185595.1_CalSC01_2013_genomic" = "RrhiSC01",
"BGEO_SAMN07136523_METAG_IKJKMCAK" = "BGEO_MAG"
)
# Replace the Sample names using the mapping
data <- data %>%
mutate(Sample = recode(Sample, !!!name_mapping))
# Create the ridgeline plot
ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 1.5) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "Sample", fill = "Region")
# Read the combined TSV file
data <- read.csv("combined_gc_content.tsv", sep = "\t")
# Create a named vector with the mapping of old names to new names
name_mapping <- c(
"GCA_030065255.1_ASM3006525v1_genomic" = "MO_167.B42",
"GCA_002470035.1_ASM247003v1_genomic" = "UBA7409",
"GCA_002377925.1_ASM237792v1_genomic" = "UBA3481",
"GCA_013214565.1_ASM1321456v1_genomic" = "MAG_DT_104",
"TARA_MED_95_MAG_00146" = "TARA_MED",
"GCA_030066045.1_ASM3006604v1_genomic" = "MO_167.B12",
"GCA_000613065.1_RintRC_1_genomic" = "RintRC01",
"GCF_000350105.1_ASM35010v1_genomic" = "ReuHH01",
"GCF_000350125.1_ASM35012v1_genomic" = "ReuHM01",
"GCA_030065055.1_ASM3006505v1_genomic" = "MO_192.B10",
"GCA_900299445.1_Richelia_intracellularis_AM_2804_genomic" = "AM_2804",
"TARA_PON_109_MAG_00086" = "TARA_PON",
"GCF_900185595.1_CalSC01_2013_genomic" = "RrhiSC01",
"BGEO_SAMN07136523_METAG_IKJKMCAK" = "BGEO_MAG"
)
# Replace the Sample names using the mapping
data <- data %>%
mutate(Sample = recode(Sample, !!!name_mapping))
# Define the desired order of genomes
desired_order <- c("MO_167.B12", "MO_192.B10", "MO_167.B42", "RrhiSC01",
"RintRC01", "MAG_DT_104", "TARA_PON", "ReuHM01",
"AM_2804", "ReuHH01", "UBA3481", "UBA7409",
"TARA_MED", "BGEO_MAG")
# Reorder the 'Sample' column in the data frame
data$Sample <- factor(data$Sample, levels = desired_order, ordered = TRUE)
# Create the ridgeline plot
ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 1.5) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "Sample", fill = "Region")
# Read the combined TSV file
data <- read.csv("combined_gc_content.tsv", sep = "\t")
# Create a named vector with the mapping of old names to new names
name_mapping <- c(
"GCA_030065255.1_ASM3006525v1_genomic" = "MO_167.B42",
"GCA_002470035.1_ASM247003v1_genomic" = "UBA7409",
"GCA_002377925.1_ASM237792v1_genomic" = "UBA3481",
"GCA_013214565.1_ASM1321456v1_genomic" = "MAG_DT_104",
"TARA_MED_95_MAG_00146" = "TARA_MED",
"GCA_030066045.1_ASM3006604v1_genomic" = "MO_167.B12",
"GCA_000613065.1_RintRC_1_genomic" = "RintRC01",
"GCF_000350105.1_ASM35010v1_genomic" = "ReuHH01",
"GCF_000350125.1_ASM35012v1_genomic" = "ReuHM01",
"GCA_030065055.1_ASM3006505v1_genomic" = "MO_192.B10",
"GCA_900299445.1_Richelia_intracellularis_AM_2804_genomic" = "AM_2804",
"TARA_PON_109_MAG_00086" = "TARA_PON",
"GCF_900185595.1_CalSC01_2013_genomic" = "RrhiSC01",
"BGEO_SAMN07136523_METAG_IKJKMCAK" = "BGEO_MAG"
)
# Replace the Sample names using the mapping
data <- data %>%
mutate(Sample = recode(Sample, !!!name_mapping))
# Define the desired order of genomes (reversed)
desired_order <- rev(c("MO_167.B12", "MO_192.B10", "MO_167.B42", "RrhiSC01",
"RintRC01", "MAG_DT_104", "TARA_PON", "ReuHM01",
"AM_2804", "ReuHH01", "UBA3481", "UBA7409",
"TARA_MED", "BGEO_MAG"))
# Reorder the 'Sample' column in the data frame
data$Sample <- factor(data$Sample, levels = desired_order, ordered = TRUE)
# Create the ridgeline plot
ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 1.5) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "Sample", fill = "Region")
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 1.5, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#3c4e66", "Long Intergenic" = "#786fa6", "Short Intergenic" = "#c3aed6")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region")
# Plot 2: Create the second ridgeline plot (assuming it's similar)
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 1.5, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#3c4e66", "Long Intergenic" = "#786fa6", "Short Intergenic" = "#c3aed6")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region")
# Print the plots side by side
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 1.5, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#9b59b6", "MO_192.B10" = "#9b59b6", "MO_167.B42" = "#9b59b6",
"RrhiSC01" = "#f39c12", "RintRC01" = "#f39c12", "MAG_DT_104" = "#1abc9c",
"TARA_PON" = "#1abc9c", "ReuHM01" = "#1abc9c", "AM_2804" = "#1abc9c",
"ReuHH01" = "#1abc9c", "UBA3481" = "#1abc9c", "UBA7409" = "#1abc9c",
"TARA_MED" = "#1abc9c", "BGEO_MAG" = "#1abc9c")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "Overall GC Content Distribution")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 1.5, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#2c3e50", "Long Intergenic" = "#8e44ad", "Short Intergenic" = "#c0392b")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "GC Content Distribution by Region")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 1.5, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "Overall GC Content Distribution")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 1.5, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "GC Content Distribution by Region")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 1.5, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 1.5, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "B")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 2, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 2, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "B")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 2, rel_min_height = 0.01, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 2, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "B")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 2, rel_min_height = 0.02, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 2, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "B")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 2, rel_min_height = 0.03, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 2, rel_min_height = 0.03 color = "black") +
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 2, rel_min_height = 0.03, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 2, rel_min_height = 0.03, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "B")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 2, rel_min_height = 0.03, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 2,5, rel_min_height = 0.03, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "B")
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 2, rel_min_height = 0.03, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 2.5, rel_min_height = 0.03, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "B")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Plot 1: GC distribution across the genome without distinguishing regions
plot1 <- ggplot(data, aes(x = GC_Content, y = Sample)) +
geom_density_ridges(aes(fill = Sample), alpha = 0.7, scale = 2, rel_min_height = 0.03, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("MO_167.B12" = "#aa4499", "MO_192.B10" = "#aa4499", "MO_167.B42" = "#aa4499",
"RrhiSC01" = "#e1be6a", "RintRC01" = "#e1be6a", "MAG_DT_104" = "#40b0a6",
"TARA_PON" = "#40b0a6", "ReuHM01" = "#40b0a6", "AM_2804" = "#40b0a6",
"ReuHH01" = "#40b0a6", "UBA3481" = "#40b0a6", "UBA7409" = "#40b0a6",
"TARA_MED" = "#40b0a6", "BGEO_MAG" = "#40b0a6")) +
theme_ridges() +
theme(legend.position = "none") +
labs(x = "GC content (%)", y = "", title = "A")
# Plot 2: GC distribution across the genome with distinction between regions
plot2 <- ggplot(data, aes(x = GC_Content, y = Sample, fill = Category)) +
geom_density_ridges(alpha = 0.7, scale = 2.5, rel_min_height = 0.05, color = "black") +
geom_point(data = data[data$Type == "Average GC%", ],
aes(x = GC_Content, y = Sample),
color = "black", size = 1.5) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
theme_ridges() +
theme(legend.position = "bottom") +
labs(x = "GC content (%)", y = "", fill = "Region", title = "B")
# Print the plots one below the other
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 1)
# Combine the plots into one layout
combined_plot <- grid.arrange(plot1, plot2, ncol = 1, heights = c(1, 1))
# Save the combined plot as a PDF
ggsave("gc_content_plots.pdf", plot = combined_plot, width = 8, height = 10)
# Calculate average GC content for CDS and Intergenic regions
data_avg <- data %>%
mutate(Intergenic = ifelse(Category == "Long Intergenic" | Category == "Short Intergenic", "Intergenic", Category)) %>%
group_by(Sample, Intergenic) %>%
summarise(Average_GC_Content = mean(GC_Content)) %>%
ungroup()
# Rename the Category column back
data_avg <- data_avg %>%
rename(Category = Intergenic)
# Bar plot
plot_a <- ggplot(data_avg, aes(x = Sample, y = Average_GC_Content, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Intergenic" = "#6247A2")) +
labs(x = "", y = "Average GC Content (%)", title = "a") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot_a)
# Calculate average GC content for CDS and Intergenic regions
data_avg <- data %>%
mutate(Intergenic = ifelse(Category == "Long Intergenic" | Category == "Short Intergenic", "Intergenic", Category)) %>%
group_by(Sample, Intergenic) %>%
summarise(Average_GC_Content = mean(GC_Content)) %>%
ungroup()
# Rename the Category column back
data_avg <- data_avg %>%
rename(Category = Intergenic)
# Bar plot
plot_a <- ggplot(data_avg, aes(x = Sample, y = Average_GC_Content, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Intergenic" = "#6247A2")) +
labs(x = "", y = "Average GC Content (%)", title = "a") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot_a)
# Violin plots
plot_b <- ggplot(data, aes(x = Sample, y = GC_Content, fill = Category)) +
geom_violin(scale = "width", adjust = 1, trim = FALSE) +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
facet_wrap(~Category, scales = "free_x") +
labs(x = "", y = "GC Content (%)", title = "b") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot_b)
# Calculate average GC content for CDS and Intergenic regions
data_avg <- data %>%
mutate(Intergenic = ifelse(Category == "Long Intergenic" | Category == "Short Intergenic", "Intergenic", Category)) %>%
group_by(Sample, Intergenic) %>%
summarise(Average_GC_Content = mean(GC_Content)) %>%
ungroup()
# Rename the Category column back
data_avg <- data_avg %>%
rename(Category = Intergenic)
# Bar plot
plot_a <- ggplot(data_avg, aes(x = Sample, y = Average_GC_Content, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Intergenic" = "#6247A2")) +
labs(x = "", y = "Average GC Content (%)", title = "a") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot_a)
# Violin plots with box plots inside them
plot_b <- ggplot(data, aes(x = Sample, y = GC_Content, fill = Category)) +
geom_violin(scale = "width", adjust = 1, trim = FALSE, color = "black") +  # Violin plot
geom_boxplot(width = 0.1, position = position_dodge(0.9), outlier.shape = NA, color = "black") +  # Box plot inside violin
scale_fill_manual(values = c("CDS" = "#5D8BC3", "Long Intergenic" = "#6247A2", "Short Intergenic" = "#D3CFE9")) +
facet_wrap(~Category, scales = "free_x") +
labs(x = "", y = "GC Content (%)", title = "b") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot_b)
# Combine the plots
combined_plot <- grid.arrange(plot_a, plot_b, ncol = 1, heights = c(1, 2))
# Save the combined plot as a PDF
ggsave("gc_content_combined_plot.pdf", combined_plot, width = 10, height = 12)
# Combine the plots
combined_plot <- grid.arrange(plot_a, plot_b, ncol = 1, heights = c(1, 2))
# Save the combined plot as a PDF
ggsave("gc_content_combined_plot.pdf", combined_plot, width = 10, height = 12)
# Combine the plots
combined_plot <- grid.arrange(plot_a, plot_b, ncol = 1, heights = c(1, 2))
# Save the combined plot as a PDF
ggsave("gc_content_combined_plot.pdf", combined_plot, width = 8, height = 10)
# Combine the plots
combined_plot <- grid.arrange(plot_a, plot_b, ncol = 1, heights = c(1, 2))
# Save the combined plot as a PDF
ggsave("gc_content_combined_plot.pdf", combined_plot, width = 10, height = 12)
# Combine the plots
combined_plot <- grid.arrange(plot_a, plot_b, ncol = 1, heights = c(1, 2))
# Save the combined plot as a PDF
ggsave("gc_content_combined_plot.pdf", combined_plot, width = 10, height = 12)
